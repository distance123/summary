总结下自己使用的基于solr的elasticSearch 索引库
什么是索引
		将非结构化化的数据中一部分提取出来,重新组织使其变得有一定的结构,然后对此有一定结构的
	数据结构进行搜索,从而达到搜索相对较快的目的.这部分重新组织的信息我们称之为索引
		
什么是索引库(index)
		类似于我们查字典时候的检索表,或者是图书管的书目检索,用户在搜索的时候,只需在到相应
	检索库里面搜索相应的信息,而不是从所有的资源中搜索
		
为什么会使用使用全文检索
		在搜索数据的时候我们大多数是使用数据库,但是数据库存放的是结构化数据,对于非结构化数据
	的查询一般有两种方式:顺序扫描法,和全文检索.全文检索是一个搜索的过程 他是指先建立索引,然后
	再对索引进行搜索的过程.虽然创建索引的过程是非常耗时的,但是索引一旦创建就可以多次使用,
	全文检索主要处理的是查询,创建索引是值得的.

如何实现全文检索
	lucence 引擎工具包 或者solr
	实现全文检索流程:原始文档--创建索引--存放至索引库--用户查询接口--创建查询--查询索引--索引库返回结果
			--渲染结果
		创建索引的流程:
		   获得原始文档:获取从网页,数据库中的数据,磁盘上的文件,通过文件流来读取内容
		   构建文档对象:创建索引前需要将原始文档的内容创建成文档对象(Document),
						每个文档有一个唯一的编号,就是文档ID
						文档中包括一个一个的域(Field),域中存储内容.
		   分析文档(分词):将原始内容创建为包含域的文档,再对域的内容进行分析,
					生成最终的语汇单元(可以理解为一个一个的单词Term),不同的域中拆分出的Term
					是不同的,Term包含两部分:一部分是文档的域名,一部分是单词的内容
					文件名中的JAVA和文件内容的JAVA是不同的Term
		   创建索引:对分析得到语汇单元进行索引,实现只搜索被索引的语汇单元从而找到文档
		   查询索引:通过搜索找到相应的文档,从而找到内容;lucence不提供制作用户搜索界面功能
配置开发环境(jdk1.7以上)
	JAR包:
		lucence-core-4.10.3
		lucence-analyzers-common-4.10.3
		lucence-queryparser-4.10.3

创建索引库(indexwrite对象创建索引)
	1.建工程,导入jar包
	2.创建indexwrite对象:指定索引库的存放位置Directory对象,指定一个分析器,对文档内容进行分析
	3.创建document对象,创建Field域对象,将field添加到document对象里面
	4.利用indexwrite对象将document对象写入索引库中(此过程会进行索引的创建)
	5.关闭indexwrite对象

查询索引
	创建indexreader对象,放入directory对象;
	创建indexSearch对象,放入indexreader对象
	创建查询对象query(通过termQuery,指定查询哪种域,哪个词汇单元term)
	开始查询indexSearch.search(可以设置返回最大结果)
	遍历查询结果(topDocs.scoreDoc存储了文档对象的ID),通过document对象的ID找到文档(indexSearc.doc)

Field域对象的属性:是否分词,是否存储,是否索引

使用IK分词器(IKAnalyzer)
	1.把JAR包添加到工程中
	2.把配置文件和扩展词汇和停用词词典添加到classpath下
	注意:mydict.dic和ext_stopword.dic文件格式为UTF-8,无BOM的UTF-8

	
solr的使用
	单独使用lucene实现站内搜索开发的工作量大,主要表现在:索引维护,索引查询优化,索引性能优化,
	基于solr实现的站内搜索,扩展性能好可以减少程序员的工作量(solr提供了较为完善的搜索引擎解决方案)
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	